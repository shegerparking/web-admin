{"ast":null,"code":"var _jsxFileName = \"/home/kb/Desktop/sheger parking/web-admin/src/components/staff/Staffs.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { EditStaff, NewStaff, ShowStaffs } from './staffActions';\nimport { baseURL } from '../../sourceData/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Staffs() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let [staffList, setStaffList] = useState([]);\n  let [selectedStaffList, setSelectedStaffList] = useState([]);\n  let [branches, setBranches] = useState([]);\n  let [branchIdVN, setbranchIdVN] = useState({});\n  let [presentable, setPresentable] = useState({});\n\n  async function FetchAdmins() {\n    _s();\n\n    useEffect(() => {\n      fetch(`${baseURL}/staffs`, {\n        method: 'GET'\n      }).then(response => response.json()).then(resp => {\n        setStaffList(resp);\n        setSelectedStaffList(resp);\n      });\n    }, []);\n    useEffect(() => {\n      fetch(`${baseURL}/branches`, {\n        method: 'GET'\n      }).then(response => response.json()).then(resp => {\n        setBranches(resp);\n      });\n    }, []);\n    useEffect(() => {\n      var branchDict = {};\n      branches.map(item => {\n        branchDict[item.id] = item.name;\n      });\n      setbranchIdVN(branchDict);\n    }, [branches]);\n  }\n\n  _s(FetchAdmins, \"ewq31d5h+FnD/qJW52w5UqeNMN4=\");\n\n  FetchAdmins();\n  setInterval(() => {\n    FetchAdmins();\n  }, 60000); //   useEffect(() => {\n  //     var presentableList = []\n  //     staffList.map((item)=>{\n  //         presentableList.push({\n  //           \"id\":item.id,\n  //           \"fullName\": item.fullName,\n  //           \"phone\": item.phone,\n  //           \"email\": item.email,\n  //           \"passwordHash\": item.passwordHash,\n  //           \"branch\": branchIdVN[item.branch]\n  //         })\n  //     })\n  //     setPresentable(presentableList)\n  // },[staffList,branchIdVN])\n  // console.log(\"hello\")\n  // console.log(branches)\n\n  console.log(presentable);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ShowStaffs, {\n        staffList: staffList,\n        selectedStaffList: selectedStaffList,\n        setSelectedStaffList: setSelectedStaffList,\n        branchIdVN: branchIdVN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/edit/\",\n      element: /*#__PURE__*/_jsxDEV(EditStaff, {\n        staffList: staffList,\n        selectedStaffList: selectedStaffList,\n        setSelectedStaffList: setSelectedStaffList,\n        branchIdVN: branchIdVN,\n        branches: branches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/new/\",\n      element: /*#__PURE__*/_jsxDEV(NewStaff, {\n        staffList: staffList,\n        selectedStaffList: selectedStaffList,\n        setSelectedStaffList: setSelectedStaffList,\n        branches: branches\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Staffs, \"5JvQz7QAbNXX5lX1DlRAWKbYCgc=\");\n\n_c = Staffs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Staffs\");","map":{"version":3,"sources":["/home/kb/Desktop/sheger parking/web-admin/src/components/staff/Staffs.js"],"names":["React","useEffect","useState","Route","Routes","EditStaff","NewStaff","ShowStaffs","baseURL","Staffs","staffList","setStaffList","selectedStaffList","setSelectedStaffList","branches","setBranches","branchIdVN","setbranchIdVN","presentable","setPresentable","FetchAdmins","fetch","method","then","response","json","resp","branchDict","map","item","id","name","setInterval","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { EditStaff, NewStaff, ShowStaffs } from './staffActions';\n\nimport {baseURL} from '../../sourceData/data'\n\n\nexport default function Staffs() {\n  let [staffList, setStaffList] = useState([]);\n  let [selectedStaffList, setSelectedStaffList] = useState([]);\n\n  let [branches, setBranches] = useState([]);\n  let [branchIdVN, setbranchIdVN] =useState({});\n\n  let [presentable, setPresentable] =useState({});\n\n\n  async function FetchAdmins() {\n    useEffect(() => {\n      fetch(`${baseURL}/staffs`, {\n        method: 'GET',\n      })\n        .then((response) => response.json())\n        .then((resp) => {\n          setStaffList(resp);\n          setSelectedStaffList(resp);\n        });\n    }, []);\n\n    useEffect(() => {\n\n    fetch(`${baseURL}/branches`, {\n      method: 'GET',\n    })\n      .then((response) => response.json())\n      .then((resp) => {\n          setBranches(resp);\n      });\n    }, []);\n      useEffect(() => {\n        var branchDict = {}\n        branches.map((item)=>{\n            branchDict[item.id]=item.name;\n        })\n        setbranchIdVN(branchDict)\n  \n      \n    },[branches])\n\n    \n  }\n\n\n  \n\n  FetchAdmins();\n\n  \n\n  setInterval(() => {\n    FetchAdmins();\n  }, 60000);\n\n\n//   useEffect(() => {\n//     var presentableList = []\n//     staffList.map((item)=>{\n//         presentableList.push({\n//           \"id\":item.id,\n//           \"fullName\": item.fullName,\n//           \"phone\": item.phone,\n//           \"email\": item.email,\n//           \"passwordHash\": item.passwordHash,\n//           \"branch\": branchIdVN[item.branch]\n\n//         })\n//     })\n//     setPresentable(presentableList)\n\n  \n// },[staffList,branchIdVN])\n\n  \n\n  // console.log(\"hello\")\n  // console.log(branches)\n  console.log(presentable)\n  return (\n    <Routes>\n      <Route\n        exact\n        path=\"/\"\n        element={\n          <ShowStaffs\n            staffList={staffList}\n            selectedStaffList={selectedStaffList}\n            setSelectedStaffList={setSelectedStaffList}\n            branchIdVN={branchIdVN}\n          />\n        }\n      />\n      <Route\n        path=\"/edit/\"\n        element={\n          <EditStaff\n            staffList={staffList}\n            selectedStaffList={selectedStaffList}\n            setSelectedStaffList={setSelectedStaffList}\n            branchIdVN={branchIdVN}\n            branches={branches}\n          />\n        }\n      />\n      <Route\n        path=\"/new/\"\n        element={\n          <NewStaff\n            staffList={staffList}\n            selectedStaffList={selectedStaffList}\n            setSelectedStaffList={setSelectedStaffList}\n            branches ={branches}\n          />\n        }\n      />\n    </Routes>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}