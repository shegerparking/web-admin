{"ast":null,"code":"var _jsxFileName = \"/home/kb/Desktop/sheger parking/web-admin/src/components/pages/LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Button from '../Button';\nimport * as ReactDOM from 'react-dom/client';\nimport '../../css/login.css';\nimport '../../css/common.css';\nimport { useNavigate } from 'react-router-dom';\nimport ErrorDisplay from '../ErrorDisplay';\nimport { Hash } from '../functions/Hash';\nimport { baseURL } from '../../sourceData/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const [phoneNo, setPhoneNo] = useState('');\n  const [password, setPassword] = useState('');\n  const token = 'token:qwhu67fv56frt5drfx45e'; // const baseURL=`http://127.0.0.1:5000/${token}/admins/login`;\n\n  function checkApiResponse(apiResponse) {\n    const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n    switch (apiResponse.status) {\n      case 200:\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-success\",\n          message: \"Success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this));\n        localStorage.setItem('loggedIn', true);\n        navigate(\"/\");\n        window.location.reload();\n        break;\n\n      case 400:\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-danger\",\n          message: \"You have incomplete credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this));\n        break;\n\n      case 404:\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-danger\",\n          message: \"You have invalid credentials, check them again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this));\n        break;\n\n      case 501:\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-danger\",\n          message: \"Sorry we're currently experiencing technical difficulties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  async function submitFunc() {\n    let headersList = {\n      Accept: '/Application/json',\n      'Content-Type': 'application/json'\n    };\n    let finalHash = await Hash(password);\n    let bodyContent = JSON.stringify({\n      phone: phoneNo,\n      passwordHash: finalHash\n    });\n    fetch(`${baseURL}/admins/login`, {\n      method: 'POST',\n      body: bodyContent,\n      headers: headersList\n    }).then(function (response) {\n      checkApiResponse(response);\n      return response.text();\n    }).then(function (data) {\n      localStorage.setItem(\"userData\", data);\n    });\n  }\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container h-100 loginContentContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form loginForm \",\n          id: \"login-form\",\n          onSubmit: event => {\n            event.preventDefault();\n            var valid = true; // if(phoneNo.length == 10){\n            //   valid = false\n            //   document.getElementById('phoneNumberError').innerHTML = '*the phone number length must be 10';\n            // }\n            // try\n\n            submitFunc();\n          },\n          action: \"\",\n          method: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"phoneNo\",\n              children: \"Phone Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"form-control username\",\n              id: \"phoneNo\",\n              placeholder: \"Phone Number\",\n              name: \"phoneNo\",\n              required: true,\n              onChange: e => setPhoneNo(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"phoneNumberError\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control password\",\n              id: \"password\",\n              placeholder: \"Password\",\n              name: \"password\",\n              required: true,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"passwordError\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"errorDisplay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"\",\n            bgColor: \"var(--primary-color)\",\n            name: \"Login\",\n            id: \"loginBtn\",\n            className: \"btn btn-customized text-center px-5 mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"KnPjeDpidj9lUHQSxKaqFV5hl2Y=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/kb/Desktop/sheger parking/web-admin/src/components/pages/LoginPage.js"],"names":["React","useEffect","useState","Button","ReactDOM","useNavigate","ErrorDisplay","Hash","baseURL","LoginPage","phoneNo","setPhoneNo","password","setPassword","token","checkApiResponse","apiResponse","root","createRoot","document","getElementById","status","render","localStorage","setItem","navigate","window","location","reload","submitFunc","headersList","Accept","finalHash","bodyContent","JSON","stringify","phone","passwordHash","fetch","method","body","headers","then","response","text","data","event","preventDefault","valid","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Button from '../Button';\nimport * as ReactDOM from 'react-dom/client';\n\nimport '../../css/login.css';\nimport '../../css/common.css';\nimport { useNavigate } from 'react-router-dom';\nimport ErrorDisplay from '../ErrorDisplay';\nimport { Hash } from '../functions/Hash';\n\nimport {baseURL} from '../../sourceData/data';\n\n\nexport default function LoginPage() {\n  const [phoneNo, setPhoneNo] = useState('');\n  const [password, setPassword] = useState('');\n\n  const token = 'token:qwhu67fv56frt5drfx45e';\n  // const baseURL=`http://127.0.0.1:5000/${token}/admins/login`;\n\n\n  function checkApiResponse(apiResponse) {\n\n    const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n    switch (apiResponse.status) {\n      case 200:\n        root.render(<ErrorDisplay design=\"text-success\" message=\"Success\" />);\n        localStorage.setItem('loggedIn',true)        \n        navigate(\"/\")\n        window.location.reload()\n\n        break;\n\n      case 400:\n        root.render(\n          <ErrorDisplay\n            design=\"text-danger\"\n            message=\"You have incomplete credentials\"\n          />\n        );\n        break;\n\n      case 404:\n        root.render(\n          <ErrorDisplay\n            design=\"text-danger\"\n            message=\"You have invalid credentials, check them again!\"\n          />\n        );\n        break;\n      case 501:\n        root.render(\n          <ErrorDisplay\n            design=\"text-danger\"\n            message=\"Sorry we're currently experiencing technical difficulties\"\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  async function submitFunc() {\n    let headersList = {\n      Accept: '/Application/json',\n      'Content-Type': 'application/json',\n    };\n\n    let finalHash= await Hash(password)\n    let bodyContent = JSON.stringify({\n      phone: phoneNo,\n      passwordHash: finalHash,\n    });\n\n    fetch(\n      `${baseURL}/admins/login`,\n      {\n        method: 'POST',\n        body: bodyContent,\n        headers: headersList,\n      }\n    ).then(function(response) {\n      checkApiResponse(response);\n      return response.text();\n    }).then(function (data) {\n       localStorage.setItem(\"userData\",data);\n    });\n    \n  }\n  const navigate = useNavigate();\n  return (\n    <div className=\"container h-100 loginContentContainer\">\n      <div className=\"justify-content-center align-items-center\">\n        <div className=\"loginContainer\">\n          <form\n            className=\"form loginForm \"\n            id=\"login-form\"\n            onSubmit={(event) => {\n              event.preventDefault();\n\n              var valid = true;\n\n              // if(phoneNo.length == 10){\n              //   valid = false\n\n              //   document.getElementById('phoneNumberError').innerHTML = '*the phone number length must be 10';\n\n              // }\n              // try\n\n              submitFunc();\n            }}\n            action=\"\"\n            method=\"\"\n          >\n            <h1 className=\"text-center\">Login</h1>\n\n            <div className=\"form-group\">\n              <label for=\"phoneNo\">Phone Number:</label>\n              <input\n                type=\"number\"\n                className=\"form-control username\"\n                id=\"phoneNo\"\n                placeholder=\"Phone Number\"\n                name=\"phoneNo\"\n                required\n                onChange={(e) => setPhoneNo(e.target.value)}\n              />\n              <div id=\"phoneNumberError\"></div>\n            </div>\n\n            <div className=\"form-group\">\n              <label for=\"password\">Password:</label>\n              <input\n                type=\"password\"\n                className=\"form-control password\"\n                id=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                required\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <div id=\"passwordError\"></div>\n            </div>\n            <div id=\"errorDisplay\"></div>\n   \n            <Button\n              type=\"submit\"\n              color=\"\"\n              bgColor=\"var(--primary-color)\"\n              name=\"Login\"\n              id=\"loginBtn\"\n              className=\"btn btn-customized text-center px-5 mt-4\"\n            />\n          </form>\n        </div>\n        </div>\n        </div>\n   \n  );\n}\n"]},"metadata":{},"sourceType":"module"}